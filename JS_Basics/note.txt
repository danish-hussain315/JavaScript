data types keywords
  const
  let 
  var
  with any about three key words

"use Strict"; was used initial use to tell engine as newer version of the JS

JS is dynamically typed language 






//Type of vaiable Primitive and non Primitive 
most languages but names may vary).

ðŸ”¹ Primitive Data Types

Primitives are basic, immutable (cannot be changed directly) data types.
They are stored by value (a copy is created when assigned).



Non Primitive

Non-primitives are objects, which can hold multiple values.
They are stored by reference (when assigned, both variables point to the same object).

Example
let obj1 = { name: "Ali" };
let obj2 = obj1;   // both point to the SAME object in heap

obj2.name = "Danish";

console.log(obj1.name); // "Danish"




++++++++++++++++++++++++++++++++++ Video 10 ++++++++++++++++++++
Stack used by Primitive
Heap is Used of Non-Primitive






++++++++++++++++++++ Video 11 ++++++++++++++++++++++++++++++++++++

ðŸ”¹ What is String Interpolation?
String interpolation means embedding variables or expressions inside a string instead of concatenating with +.

In JavaScript, this is done with Template Literals (using backticks `).


*string comparision is case sensitive
*String Prototype will tell about the all funtion that can be apply on the String
* on apply of any funtion primitives never change the orignal variables




+++++++++++++++++++++++++++++ Video 12 +++++++++++++++++

Number and Math Libray


++++++++++++++++++++++++++ Video 13 Data and Time ++++++++++++++++++
*Date is Object 
*Date give by system is unreadable so we uses the method to make is understandable
*Months start from 0



+++++++++++++++ Video 14  Array +++++++++++++++++++++++++++++++
* Array Takes multiple values 
* Array can store different dataTypes at same Time (Hetrogene type)
* JS array is dynamic 
* Array created shallow copy (same refference) rather than the Deep copy()
* in Deep copy we are assured that we are not changing the other copy either orignal or copy
* In Shallow copy we are ensured that when I change single other will auto changed
* there are few methods that are called Questioneer they return true ow false
  includes()
* indexOf()  indexs -1 to till index
* join() convert array values to strings and remove square brackets
* slice and splice
 slice(startindex , endIndex)
 splice(start, deleteCount, [value to insert(optional)])
* slice endIndex is not Indcluded and 
  used the deep copy when data in Array is Primitive
  used the shallow copy when data in Array is Non-Primitive


âœ… Deep Copy

A deep copy creates a completely independent copy, including all nested objects/arrays.
Changing one does not affect the other.

âœ… Shallow Copy

A shallow copy only copies the first level of the object/array.

If the array/object contains primitives â†’ new values are created (safe).

If it contains objects/arrays inside â†’ only references (pointers) are copied, so nested data is shared between original and copy.





++++++++++++++++++++++ Video 15 Array Part 2 ++++++++++++++++++++++++
* arr.push(array)      //consider a array as the element
* arr.concate(array )  // make a large array
+ newArray = [...arr1 , ...arr2, n]           // make a large array
* newArray.flat(level)  //reduced the level og nested arrays
* isArray(arrya)
*Array.from()     // From Converts the string to the character Array
*Array.from({name = "Danish"})        // It will return empty object
* Array.of(variables)         // creates array from variable






+++++++++++++++++ video 16 Object First Part +++++++++++++
Object types
  1 Singleton Object   Object.create("my_Object")
  2 Literals Object            my_Object = {}

  Aceesing Object dotNotation and Square brackets
  Using Symbol as property of the object used square brackets
funtion reference (greeting)
funtion execution (greeting())


+++++++++++++++++++ Video 17 Object part 2 ++++++++++++
* Previous Video was about the Literal Object
* It Singleton Object
   Object that can be created by constructor or Object help

assign() is used to merge objects





+++++++++++++++++++ video 18 Object Part 3 De Structuring JSON Intro +++++++++++++++++
Object de-Structure 
API => your work on other
All Apis are in form of JSON 
* Random Api used to take few Api
* API Formattor used to post Martum of API

